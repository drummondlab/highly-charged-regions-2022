panel.background=element_blank(),
axis.ticks=element_line(colour="grey20"),
panel.border=element_rect(fill=NA),
legend.background = element_blank(),
legend.key.height = unit(3, "mm"),
legend.key = element_blank(),
strip.background = element_blank(),
legend.box.spacing = unit(1, "mm"))
}
theme_set(theme_clean(base_size = 10))
`%!in%` = Negate(`%in%`)
charged.hits <- read.csv("../data/charged_regions/cr_trimmed_filtered_unlabeled.csv", comment.char = "#", stringsAsFactors = FALSE) %>%
filter(orf_label != "dubious") %>%
mutate(n.E = str_count(region.seq, "E"),
n.K = str_count(region.seq, "K"),
n.D = str_count(region.seq, "D"),
n.R = str_count(region.seq, "R"),
n.GP = str_count(region.seq, "G") + str_count(region.seq, "P"),
per.pos = (n.K + n.R) / (n.E + n.K + n.D + n.R),
per.neg = 1 - per.pos,
tot.pos = (n.K + n.R) / region.len,
tot.neg = (n.E + n.D) / region.len,
net.charge = ((n.K + n.R) - (n.E + n.D)) / region.len,
gene = ifelse(gene == "MDN1", "REA1", gene)) # Correct old gene name
charged.hits <- read.csv("../data/charged_regions/cr_trimmed_filtered_unlabeled.csv", comment.char = "#", stringsAsFactors = FALSE) %>%
#filter(orf_label != "dubious") %>%
mutate(n.E = str_count(region.seq, "E"),
n.K = str_count(region.seq, "K"),
n.D = str_count(region.seq, "D"),
n.R = str_count(region.seq, "R"),
n.GP = str_count(region.seq, "G") + str_count(region.seq, "P"),
per.pos = (n.K + n.R) / (n.E + n.K + n.D + n.R),
per.neg = 1 - per.pos,
tot.pos = (n.K + n.R) / region.len,
tot.neg = (n.E + n.D) / region.len,
net.charge = ((n.K + n.R) - (n.E + n.D)) / region.len,
gene = ifelse(gene == "MDN1", "REA1", gene)) # Correct old gene name
test = read.csv("../data/charged_regions/cr_trimmed_filtered_unlabeled.csv", comment.char = "#", stringsAsFactors = FALSE)
head(test)
charged.hits <- read.csv("../data/charged_regions/cr_trimmed_filtered_unlabeled.csv", comment.char = "#", stringsAsFactors = FALSE) %>%
#filter(orf_label != "dubious") %>%
mutate(n.E = str_count(region.seq, "E"),
n.K = str_count(region.seq, "K"),
n.D = str_count(region.seq, "D"),
n.R = str_count(region.seq, "R"),
n.GP = str_count(region.seq, "G") + str_count(region.seq, "P"),
per.pos = (n.K + n.R) / (n.E + n.K + n.D + n.R),
per.neg = 1 - per.pos,
tot.pos = (n.K + n.R) / region.len,
tot.neg = (n.E + n.D) / region.len,
net.charge = ((n.K + n.R) - (n.E + n.D)) / region.len,
gene = ifelse(gene == "MDN1", "REA1", gene)) # Correct old gene name
read.csv("../data/charged_regions/cr_trimmed_filtered_unlabeled.csv", comment.char = "#", stringsAsFactors = FALSE)
charged.hits <- read.csv("../data/charged_regions/cr_trimmed_filtered_unlabeled.csv", comment.char = "#", stringsAsFactors = FALSE) %>%
#filter(orf_label != "dubious") %>%
mutate(n.E = str_count(region.seq, "E"),
n.K = str_count(region.seq, "K"),
n.D = str_count(region.seq, "D"),
n.R = str_count(region.seq, "R"),
n.GP = str_count(region.seq, "G") + str_count(region.seq, "P"),
per.pos = (n.K + n.R) / (n.E + n.K + n.D + n.R),
per.neg = 1 - per.pos,
tot.pos = (n.K + n.R) / region.len,
tot.neg = (n.E + n.D) / region.len,
net.charge = ((n.K + n.R) - (n.E + n.D)) / region.len,
gene = ifelse(gene == "MDN1", "REA1", gene)) # Correct old gene name
allGOs.allORFs <- read.delim("../data/GO-analysis/allgos_allorfs.tsv", header=F, col.names = c("orf", "gene", "GO_name", "GO_type", "GO_id"))
nucleolusGOs.orfs <- fread("../data/GO-analysis/orfs_annotated_as_nuleolar_and_childGOs.tsv", sep = "\t", stringsAsFactors = FALSE,
col.names = c("orf", "gene", "feature", "status", "GO_id", "GO_name", "GO_type", "modifier", "curation.type"))
slim_processes <- read.delim("../data/GO-analysis/goslim_process.txt", header=F, sep = ";")[,2]
slim_components <- read.delim("../data/GO-analysis/goslim_component.txt", header=F, sep=";")[,2]
slim_functions <- read.delim("../data/GO-analysis/goslim_function.txt", header=F, sep=";")[,2]
allslims <- base::union(base::union(slim_processes, slim_components), slim_functions)
extra_terms = c("GO:0042254")
allslims = c(allslims, extra_terms)
allslims.allORFs <- filter(allGOs.allORFs, GO_id %in% allslims)
some.components.all.orfs <- filter(allslims.allORFs, GO_type == "cellular_component") %>%
filter(GO_name %!in% c("cellular_component", "endomembrane system", "site of polarized growth")) %>%
mutate(hit = ifelse(orf %in% unique(charged.hits$orf), 'y', 'n'))
ordering <- group_by(some.components.all.orfs, GO_name, hit) %>%
summarise(num = n()) %>%
reshape2::dcast(GO_name ~ hit, value.var="num") %>%
mutate_if(is.integer, ~replace(., is.na(.), 0)) %>%
mutate(per.y = y / (y+n)) %>%
arrange(desc(per.y))
some.components.all.orfs <- some.components.all.orfs %>%
mutate(GO_name.f = factor(GO_name, levels = ordering$GO_name))
ggplot(some.components.all.orfs, aes(x = GO_name.f, fill = hit)) +
geom_bar(position='fill', show.legend = FALSE) +
labs(y = "Fraction with at\nleast one region") +
scale_fill_manual(values = c('y' = 'black', 'n' = 'grey'), labels = c('n' = 'not detected', 'y' = 'detected')) +
geom_hline(yintercept = length(unique(charged.hits$orf))/5925,
color="white") + # baseline frequency of all non-dubious active orfs from s. cer
theme(axis.title.x = element_blank(),
axis.text.x = element_text(angle = 60, hjust = 1, vjust = 1, size=8))
#ggsave("../figures/S1-enrichments.png", width = 5, height = 3, units = "in")
charged.hits <- read.csv("../data/charged_regions/cr_filtered_aflabel.csv", comment.char = "#", stringsAsFactors = FALSE) %>%
#filter(orf_label != "dubious") %>%
mutate(n.E = str_count(region.seq, "E"),
n.K = str_count(region.seq, "K"),
n.D = str_count(region.seq, "D"),
n.R = str_count(region.seq, "R"),
n.GP = str_count(region.seq, "G") + str_count(region.seq, "P"),
per.pos = (n.K + n.R) / (n.E + n.K + n.D + n.R),
per.neg = 1 - per.pos,
tot.pos = (n.K + n.R) / region.len,
tot.neg = (n.E + n.D) / region.len,
net.charge = ((n.K + n.R) - (n.E + n.D)) / region.len,
gene = ifelse(gene == "MDN1", "REA1", gene)) # Correct old gene name
allGOs.allORFs <- read.delim("../data/GO-analysis/allgos_allorfs.tsv", header=F, col.names = c("orf", "gene", "GO_name", "GO_type", "GO_id"))
nucleolusGOs.orfs <- fread("../data/GO-analysis/orfs_annotated_as_nuleolar_and_childGOs.tsv", sep = "\t", stringsAsFactors = FALSE,
col.names = c("orf", "gene", "feature", "status", "GO_id", "GO_name", "GO_type", "modifier", "curation.type"))
slim_processes <- read.delim("../data/GO-analysis/goslim_process.txt", header=F, sep = ";")[,2]
slim_components <- read.delim("../data/GO-analysis/goslim_component.txt", header=F, sep=";")[,2]
slim_functions <- read.delim("../data/GO-analysis/goslim_function.txt", header=F, sep=";")[,2]
allslims <- base::union(base::union(slim_processes, slim_components), slim_functions)
extra_terms = c("GO:0042254")
allslims = c(allslims, extra_terms)
allslims.allORFs <- filter(allGOs.allORFs, GO_id %in% allslims)
some.components.all.orfs <- filter(allslims.allORFs, GO_type == "cellular_component") %>%
filter(GO_name %!in% c("cellular_component", "endomembrane system", "site of polarized growth")) %>%
mutate(hit = ifelse(orf %in% unique(charged.hits$orf), 'y', 'n'))
ordering <- group_by(some.components.all.orfs, GO_name, hit) %>%
summarise(num = n()) %>%
reshape2::dcast(GO_name ~ hit, value.var="num") %>%
mutate_if(is.integer, ~replace(., is.na(.), 0)) %>%
mutate(per.y = y / (y+n)) %>%
arrange(desc(per.y))
some.components.all.orfs <- some.components.all.orfs %>%
mutate(GO_name.f = factor(GO_name, levels = ordering$GO_name))
ggplot(some.components.all.orfs, aes(x = GO_name.f, fill = hit)) +
geom_bar(position='fill', show.legend = FALSE) +
labs(y = "Fraction with at\nleast one region") +
scale_fill_manual(values = c('y' = 'black', 'n' = 'grey'), labels = c('n' = 'not detected', 'y' = 'detected')) +
geom_hline(yintercept = length(unique(charged.hits$orf))/5925,
color="white") + # baseline frequency of all non-dubious active orfs from s. cer
theme(axis.title.x = element_blank(),
axis.text.x = element_text(angle = 60, hjust = 1, vjust = 1, size=8))
#ggsave("../figures/S1-enrichments.png", width = 5, height = 3, units = "in")
charged.hits <- read.csv("../data/charged_regions/cr_filtered_aflabel.csv", comment.char = "#", stringsAsFactors = FALSE) %>%
filter(orf_label != "dubious") %>%
mutate(n.E = str_count(region.seq, "E"),
n.K = str_count(region.seq, "K"),
n.D = str_count(region.seq, "D"),
n.R = str_count(region.seq, "R"),
n.GP = str_count(region.seq, "G") + str_count(region.seq, "P"),
per.pos = (n.K + n.R) / (n.E + n.K + n.D + n.R),
per.neg = 1 - per.pos,
tot.pos = (n.K + n.R) / region.len,
tot.neg = (n.E + n.D) / region.len,
net.charge = ((n.K + n.R) - (n.E + n.D)) / region.len,
gene = ifelse(gene == "MDN1", "REA1", gene)) # Correct old gene name
allGOs.allORFs <- read.delim("../data/GO-analysis/allgos_allorfs.tsv", header=F, col.names = c("orf", "gene", "GO_name", "GO_type", "GO_id"))
nucleolusGOs.orfs <- fread("../data/GO-analysis/orfs_annotated_as_nuleolar_and_childGOs.tsv", sep = "\t", stringsAsFactors = FALSE,
col.names = c("orf", "gene", "feature", "status", "GO_id", "GO_name", "GO_type", "modifier", "curation.type"))
slim_processes <- read.delim("../data/GO-analysis/goslim_process.txt", header=F, sep = ";")[,2]
slim_components <- read.delim("../data/GO-analysis/goslim_component.txt", header=F, sep=";")[,2]
slim_functions <- read.delim("../data/GO-analysis/goslim_function.txt", header=F, sep=";")[,2]
allslims <- base::union(base::union(slim_processes, slim_components), slim_functions)
extra_terms = c("GO:0042254")
allslims = c(allslims, extra_terms)
allslims.allORFs <- filter(allGOs.allORFs, GO_id %in% allslims)
some.components.all.orfs <- filter(allslims.allORFs, GO_type == "cellular_component") %>%
filter(GO_name %!in% c("cellular_component", "endomembrane system", "site of polarized growth")) %>%
mutate(hit = ifelse(orf %in% unique(charged.hits$orf), 'y', 'n'))
ordering <- group_by(some.components.all.orfs, GO_name, hit) %>%
summarise(num = n()) %>%
reshape2::dcast(GO_name ~ hit, value.var="num") %>%
mutate_if(is.integer, ~replace(., is.na(.), 0)) %>%
mutate(per.y = y / (y+n)) %>%
arrange(desc(per.y))
some.components.all.orfs <- some.components.all.orfs %>%
mutate(GO_name.f = factor(GO_name, levels = ordering$GO_name))
ggplot(some.components.all.orfs, aes(x = GO_name.f, fill = hit)) +
geom_bar(position='fill', show.legend = FALSE) +
labs(y = "Fraction with at\nleast one region") +
scale_fill_manual(values = c('y' = 'black', 'n' = 'grey'), labels = c('n' = 'not detected', 'y' = 'detected')) +
geom_hline(yintercept = length(unique(charged.hits$orf))/5925,
color="white") + # baseline frequency of all non-dubious active orfs from s. cer
theme(axis.title.x = element_blank(),
axis.text.x = element_text(angle = 60, hjust = 1, vjust = 1, size=8))
#ggsave("../figures/S1-enrichments.png", width = 5, height = 3, units = "in")
charged.hits <- read.csv("../data/charged_regions/cr_trimmed_filtered_lrlabel.csv", comment.char = "#", stringsAsFactors = FALSE) %>%
filter(orf_label != "dubious") %>%
mutate(n.E = str_count(region.seq, "E"),
n.K = str_count(region.seq, "K"),
n.D = str_count(region.seq, "D"),
n.R = str_count(region.seq, "R"),
n.GP = str_count(region.seq, "G") + str_count(region.seq, "P"),
per.pos = (n.K + n.R) / (n.E + n.K + n.D + n.R),
per.neg = 1 - per.pos,
tot.pos = (n.K + n.R) / region.len,
tot.neg = (n.E + n.D) / region.len,
net.charge = ((n.K + n.R) - (n.E + n.D)) / region.len,
gene = ifelse(gene == "MDN1", "REA1", gene)) # Correct old gene name
ggplot(some.components.all.orfs, aes(x = GO_name.f, fill = hit)) +
geom_bar(position='fill', show.legend = FALSE) +
labs(y = "Fraction with at\nleast one region") +
scale_fill_manual(values = c('y' = 'black', 'n' = 'grey'), labels = c('n' = 'not detected', 'y' = 'detected')) +
geom_hline(yintercept = length(unique(charged.hits$orf))/5925,
color="white") + # baseline frequency of all non-dubious active orfs from s. cer
theme(axis.title.x = element_blank(),
axis.text.x = element_text(angle = 60, hjust = 1, vjust = 1, size=8))
ordering <- group_by(some.components.all.orfs, GO_name, hit) %>%
summarise(num = n()) %>%
reshape2::dcast(GO_name ~ hit, value.var="num") %>%
mutate_if(is.integer, ~replace(., is.na(.), 0)) %>%
mutate(per.y = y / (y+n)) %>%
arrange(desc(per.y))
some.components.all.orfs <- some.components.all.orfs %>%
mutate(GO_name.f = factor(GO_name, levels = ordering$GO_name))
ggplot(some.components.all.orfs, aes(x = GO_name.f, fill = hit)) +
geom_bar(position='fill', show.legend = FALSE) +
labs(y = "Fraction with at\nleast one region") +
scale_fill_manual(values = c('y' = 'black', 'n' = 'grey'), labels = c('n' = 'not detected', 'y' = 'detected')) +
geom_hline(yintercept = length(unique(charged.hits$orf))/5925,
color="white") + # baseline frequency of all non-dubious active orfs from s. cer
theme(axis.title.x = element_blank(),
axis.text.x = element_text(angle = 60, hjust = 1, vjust = 1, size=8))
#ggsave("../figures/S1-enrichments.png", width = 5, height = 3, units = "in")
charged.hits <- read.csv("../data/charged_regions/cr_trimmed_filtered_unlabeled.csv", comment.char = "#", stringsAsFactors = FALSE) %>%
filter(orf_label != "dubious") %>%
mutate(n.E = str_count(region.seq, "E"),
n.K = str_count(region.seq, "K"),
n.D = str_count(region.seq, "D"),
n.R = str_count(region.seq, "R"),
n.GP = str_count(region.seq, "G") + str_count(region.seq, "P"),
per.pos = (n.K + n.R) / (n.E + n.K + n.D + n.R),
per.neg = 1 - per.pos,
tot.pos = (n.K + n.R) / region.len,
tot.neg = (n.E + n.D) / region.len,
net.charge = ((n.K + n.R) - (n.E + n.D)) / region.len,
gene = ifelse(gene == "MDN1", "REA1", gene)) # Correct old gene name
ordering <- group_by(some.components.all.orfs, GO_name, hit) %>%
summarise(num = n()) %>%
reshape2::dcast(GO_name ~ hit, value.var="num") %>%
mutate_if(is.integer, ~replace(., is.na(.), 0)) %>%
mutate(per.y = y / (y+n)) %>%
arrange(desc(per.y))
some.components.all.orfs <- some.components.all.orfs %>%
mutate(GO_name.f = factor(GO_name, levels = ordering$GO_name))
ggplot(some.components.all.orfs, aes(x = GO_name.f, fill = hit)) +
geom_bar(position='fill', show.legend = FALSE) +
labs(y = "Fraction with at\nleast one region") +
scale_fill_manual(values = c('y' = 'black', 'n' = 'grey'), labels = c('n' = 'not detected', 'y' = 'detected')) +
geom_hline(yintercept = length(unique(charged.hits$orf))/5925,
color="white") + # baseline frequency of all non-dubious active orfs from s. cer
theme(axis.title.x = element_blank(),
axis.text.x = element_text(angle = 60, hjust = 1, vjust = 1, size=8))
#ggsave("../figures/S1-enrichments.png", width = 5, height = 3, units = "in")
allGOs.allORFs <- read.delim("../data/GO-analysis/allgos_allorfs.tsv", header=F, col.names = c("orf", "gene", "GO_name", "GO_type", "GO_id"))
nucleolusGOs.orfs <- fread("../data/GO-analysis/orfs_annotated_as_nuleolar_and_childGOs.tsv", sep = "\t", stringsAsFactors = FALSE,
col.names = c("orf", "gene", "feature", "status", "GO_id", "GO_name", "GO_type", "modifier", "curation.type"))
slim_processes <- read.delim("../data/GO-analysis/goslim_process.txt", header=F, sep = ";")[,2]
slim_components <- read.delim("../data/GO-analysis/goslim_component.txt", header=F, sep=";")[,2]
slim_functions <- read.delim("../data/GO-analysis/goslim_function.txt", header=F, sep=";")[,2]
allslims <- base::union(base::union(slim_processes, slim_components), slim_functions)
extra_terms = c("GO:0042254")
allslims = c(allslims, extra_terms)
allslims.allORFs <- filter(allGOs.allORFs, GO_id %in% allslims)
some.components.all.orfs <- filter(allslims.allORFs, GO_type == "cellular_component") %>%
filter(GO_name %!in% c("cellular_component", "endomembrane system", "site of polarized growth")) %>%
mutate(hit = ifelse(orf %in% unique(charged.hits$orf), 'y', 'n'))
ordering <- group_by(some.components.all.orfs, GO_name, hit) %>%
summarise(num = n()) %>%
reshape2::dcast(GO_name ~ hit, value.var="num") %>%
mutate_if(is.integer, ~replace(., is.na(.), 0)) %>%
mutate(per.y = y / (y+n)) %>%
arrange(desc(per.y))
some.components.all.orfs <- some.components.all.orfs %>%
mutate(GO_name.f = factor(GO_name, levels = ordering$GO_name))
ggplot(some.components.all.orfs, aes(x = GO_name.f, fill = hit)) +
geom_bar(position='fill', show.legend = FALSE) +
labs(y = "Fraction with at\nleast one region") +
scale_fill_manual(values = c('y' = 'black', 'n' = 'grey'), labels = c('n' = 'not detected', 'y' = 'detected')) +
geom_hline(yintercept = length(unique(charged.hits$orf))/5925,
color="white") + # baseline frequency of all non-dubious active orfs from s. cer
theme(axis.title.x = element_blank(),
axis.text.x = element_text(angle = 60, hjust = 1, vjust = 1, size=8))
#ggsave("../figures/S1-enrichments.png", width = 5, height = 3, units = "in")
charged.hits <- read.csv("../data/charged_regions/cr_trimmed_filtered_unlabeled.csv", comment.char = "#", stringsAsFactors = FALSE) %>%
filter(orf_label != "dubious") %>%
mutate(n.E = str_count(region.seq, "E"),
n.K = str_count(region.seq, "K"),
n.D = str_count(region.seq, "D"),
n.R = str_count(region.seq, "R"),
n.GP = str_count(region.seq, "G") + str_count(region.seq, "P"),
per.pos = (n.K + n.R) / (n.E + n.K + n.D + n.R),
per.neg = 1 - per.pos,
tot.pos = (n.K + n.R) / region.len,
tot.neg = (n.E + n.D) / region.len,
net.charge = ((n.K + n.R) - (n.E + n.D)) / region.len,
gene = ifelse(gene == "MDN1", "REA1", gene)) # Correct old gene name
nrow(charged.hits)
charged.hits <- read.csv("../data/charged_regions/cr_filtered_unlabeled.csv", comment.char = "#", stringsAsFactors = FALSE) %>%
filter(orf_label != "dubious") %>%
mutate(n.E = str_count(region.seq, "E"),
n.K = str_count(region.seq, "K"),
n.D = str_count(region.seq, "D"),
n.R = str_count(region.seq, "R"),
n.GP = str_count(region.seq, "G") + str_count(region.seq, "P"),
per.pos = (n.K + n.R) / (n.E + n.K + n.D + n.R),
per.neg = 1 - per.pos,
tot.pos = (n.K + n.R) / region.len,
tot.neg = (n.E + n.D) / region.len,
net.charge = ((n.K + n.R) - (n.E + n.D)) / region.len,
gene = ifelse(gene == "MDN1", "REA1", gene)) # Correct old gene name
head(charged.hits)
nrow(charged.hits)
charged.hits <- read.csv("../data/charged_regions/cr_filtered.csv", comment.char = "#", stringsAsFactors = FALSE) %>%
filter(orf_label != "dubious") %>%
mutate(n.E = str_count(region.seq, "E"),
n.K = str_count(region.seq, "K"),
n.D = str_count(region.seq, "D"),
n.R = str_count(region.seq, "R"),
n.GP = str_count(region.seq, "G") + str_count(region.seq, "P"),
per.pos = (n.K + n.R) / (n.E + n.K + n.D + n.R),
per.neg = 1 - per.pos,
tot.pos = (n.K + n.R) / region.len,
tot.neg = (n.E + n.D) / region.len,
net.charge = ((n.K + n.R) - (n.E + n.D)) / region.len,
gene = ifelse(gene == "MDN1", "REA1", gene)) # Correct old gene name
charged.hits <- read.csv("../data/charged_regions/cr_raw.csv", comment.char = "#", stringsAsFactors = FALSE) %>%
filter(orf_label != "dubious") %>%
mutate(n.E = str_count(region.seq, "E"),
n.K = str_count(region.seq, "K"),
n.D = str_count(region.seq, "D"),
n.R = str_count(region.seq, "R"),
n.GP = str_count(region.seq, "G") + str_count(region.seq, "P"),
per.pos = (n.K + n.R) / (n.E + n.K + n.D + n.R),
per.neg = 1 - per.pos,
tot.pos = (n.K + n.R) / region.len,
tot.neg = (n.E + n.D) / region.len,
net.charge = ((n.K + n.R) - (n.E + n.D)) / region.len,
gene = ifelse(gene == "MDN1", "REA1", gene)) # Correct old gene name
charged.hits <- read.csv("../data/charged_regions/cr_filtered_aflabel.csv", comment.char = "#", stringsAsFactors = FALSE) %>%
filter(orf_label != "dubious") %>%
mutate(n.E = str_count(region.seq, "E"),
n.K = str_count(region.seq, "K"),
n.D = str_count(region.seq, "D"),
n.R = str_count(region.seq, "R"),
n.GP = str_count(region.seq, "G") + str_count(region.seq, "P"),
per.pos = (n.K + n.R) / (n.E + n.K + n.D + n.R),
per.neg = 1 - per.pos,
tot.pos = (n.K + n.R) / region.len,
tot.neg = (n.E + n.D) / region.len,
net.charge = ((n.K + n.R) - (n.E + n.D)) / region.len,
gene = ifelse(gene == "MDN1", "REA1", gene)) # Correct old gene name
charged.hits <- read.csv("../data/charged_regions/cr_filtered_unlabeled.csv", comment.char = "#", stringsAsFactors = FALSE) %>%
filter(orf_label != "dubious") %>%
mutate(n.E = str_count(region.seq, "E"),
n.K = str_count(region.seq, "K"),
n.D = str_count(region.seq, "D"),
n.R = str_count(region.seq, "R"),
n.GP = str_count(region.seq, "G") + str_count(region.seq, "P"),
per.pos = (n.K + n.R) / (n.E + n.K + n.D + n.R),
per.neg = 1 - per.pos,
tot.pos = (n.K + n.R) / region.len,
tot.neg = (n.E + n.D) / region.len,
net.charge = ((n.K + n.R) - (n.E + n.D)) / region.len,
gene = ifelse(gene == "MDN1", "REA1", gene)) # Correct old gene name
head(charged.hits)
nrow(charged.hits)
head(charged.hits)
charged.hits <- read.csv("../data/charged_regions/cr_trimmed_filtered.csv", comment.char = "#", stringsAsFactors = FALSE) %>%
filter(orf_label != "dubious") %>%
mutate(n.E = str_count(region.seq, "E"),
n.K = str_count(region.seq, "K"),
n.D = str_count(region.seq, "D"),
n.R = str_count(region.seq, "R"),
n.GP = str_count(region.seq, "G") + str_count(region.seq, "P"),
per.pos = (n.K + n.R) / (n.E + n.K + n.D + n.R),
per.neg = 1 - per.pos,
tot.pos = (n.K + n.R) / region.len,
tot.neg = (n.E + n.D) / region.len,
net.charge = ((n.K + n.R) - (n.E + n.D)) / region.len,
gene = ifelse(gene == "MDN1", "REA1", gene)) # Correct old gene name
charged.hits <- read.csv("../data/charged_regions/cr_trimmed_filtered.csv", comment.char = "#", stringsAsFactors = FALSE) %>%
filter(orf_label != "dubious") %>%
mutate(n.E = str_count(region.seq, "E"),
n.K = str_count(region.seq, "K"),
n.D = str_count(region.seq, "D"),
n.R = str_count(region.seq, "R"),
n.GP = str_count(region.seq, "G") + str_count(region.seq, "P"),
per.pos = (n.K + n.R) / (n.E + n.K + n.D + n.R),
per.neg = 1 - per.pos,
tot.pos = (n.K + n.R) / region.len,
tot.neg = (n.E + n.D) / region.len,
net.charge = ((n.K + n.R) - (n.E + n.D)) / region.len,
gene = ifelse(gene == "MDN1", "REA1", gene)) # Correct old gene name
allGOs.allORFs <- read.delim("../data/GO-analysis/allgos_allorfs.tsv", header=F, col.names = c("orf", "gene", "GO_name", "GO_type", "GO_id"))
nucleolusGOs.orfs <- fread("../data/GO-analysis/orfs_annotated_as_nuleolar_and_childGOs.tsv", sep = "\t", stringsAsFactors = FALSE,
col.names = c("orf", "gene", "feature", "status", "GO_id", "GO_name", "GO_type", "modifier", "curation.type"))
slim_processes <- read.delim("../data/GO-analysis/goslim_process.txt", header=F, sep = ";")[,2]
slim_components <- read.delim("../data/GO-analysis/goslim_component.txt", header=F, sep=";")[,2]
slim_functions <- read.delim("../data/GO-analysis/goslim_function.txt", header=F, sep=";")[,2]
allslims <- base::union(base::union(slim_processes, slim_components), slim_functions)
extra_terms = c("GO:0042254")
allslims = c(allslims, extra_terms)
allslims.allORFs <- filter(allGOs.allORFs, GO_id %in% allslims)
some.components.all.orfs <- filter(allslims.allORFs, GO_type == "cellular_component") %>%
filter(GO_name %!in% c("cellular_component", "endomembrane system", "site of polarized growth")) %>%
mutate(hit = ifelse(orf %in% unique(charged.hits$orf), 'y', 'n'))
ordering <- group_by(some.components.all.orfs, GO_name, hit) %>%
summarise(num = n()) %>%
reshape2::dcast(GO_name ~ hit, value.var="num") %>%
mutate_if(is.integer, ~replace(., is.na(.), 0)) %>%
mutate(per.y = y / (y+n)) %>%
arrange(desc(per.y))
some.components.all.orfs <- some.components.all.orfs %>%
mutate(GO_name.f = factor(GO_name, levels = ordering$GO_name))
ggplot(some.components.all.orfs, aes(x = GO_name.f, fill = hit)) +
geom_bar(position='fill', show.legend = FALSE) +
labs(y = "Fraction with at\nleast one region") +
scale_fill_manual(values = c('y' = 'black', 'n' = 'grey'), labels = c('n' = 'not detected', 'y' = 'detected')) +
geom_hline(yintercept = length(unique(charged.hits$orf))/5925,
color="white") + # baseline frequency of all non-dubious active orfs from s. cer
theme(axis.title.x = element_blank(),
axis.text.x = element_text(angle = 60, hjust = 1, vjust = 1, size=8))
#ggsave("../figures/S1-enrichments.png", width = 5, height = 3, units = "in")
charged.hits <- read.csv("../data/charged_regions/cr_trimmed_raw.csv", comment.char = "#", stringsAsFactors = FALSE) %>%
filter(orf_label != "dubious") %>%
mutate(n.E = str_count(region.seq, "E"),
n.K = str_count(region.seq, "K"),
n.D = str_count(region.seq, "D"),
n.R = str_count(region.seq, "R"),
n.GP = str_count(region.seq, "G") + str_count(region.seq, "P"),
per.pos = (n.K + n.R) / (n.E + n.K + n.D + n.R),
per.neg = 1 - per.pos,
tot.pos = (n.K + n.R) / region.len,
tot.neg = (n.E + n.D) / region.len,
net.charge = ((n.K + n.R) - (n.E + n.D)) / region.len,
gene = ifelse(gene == "MDN1", "REA1", gene)) # Correct old gene name
allGOs.allORFs <- read.delim("../data/GO-analysis/allgos_allorfs.tsv", header=F, col.names = c("orf", "gene", "GO_name", "GO_type", "GO_id"))
nucleolusGOs.orfs <- fread("../data/GO-analysis/orfs_annotated_as_nuleolar_and_childGOs.tsv", sep = "\t", stringsAsFactors = FALSE,
col.names = c("orf", "gene", "feature", "status", "GO_id", "GO_name", "GO_type", "modifier", "curation.type"))
slim_processes <- read.delim("../data/GO-analysis/goslim_process.txt", header=F, sep = ";")[,2]
slim_components <- read.delim("../data/GO-analysis/goslim_component.txt", header=F, sep=";")[,2]
slim_functions <- read.delim("../data/GO-analysis/goslim_function.txt", header=F, sep=";")[,2]
allslims <- base::union(base::union(slim_processes, slim_components), slim_functions)
extra_terms = c("GO:0042254")
allslims = c(allslims, extra_terms)
allslims.allORFs <- filter(allGOs.allORFs, GO_id %in% allslims)
some.components.all.orfs <- filter(allslims.allORFs, GO_type == "cellular_component") %>%
filter(GO_name %!in% c("cellular_component", "endomembrane system", "site of polarized growth")) %>%
mutate(hit = ifelse(orf %in% unique(charged.hits$orf), 'y', 'n'))
ordering <- group_by(some.components.all.orfs, GO_name, hit) %>%
summarise(num = n()) %>%
reshape2::dcast(GO_name ~ hit, value.var="num") %>%
mutate_if(is.integer, ~replace(., is.na(.), 0)) %>%
mutate(per.y = y / (y+n)) %>%
arrange(desc(per.y))
some.components.all.orfs <- some.components.all.orfs %>%
mutate(GO_name.f = factor(GO_name, levels = ordering$GO_name))
ggplot(some.components.all.orfs, aes(x = GO_name.f, fill = hit)) +
geom_bar(position='fill', show.legend = FALSE) +
labs(y = "Fraction with at\nleast one region") +
scale_fill_manual(values = c('y' = 'black', 'n' = 'grey'), labels = c('n' = 'not detected', 'y' = 'detected')) +
geom_hline(yintercept = length(unique(charged.hits$orf))/5925,
color="white") + # baseline frequency of all non-dubious active orfs from s. cer
theme(axis.title.x = element_blank(),
axis.text.x = element_text(angle = 60, hjust = 1, vjust = 1, size=8))
#ggsave("../figures/S1-enrichments.png", width = 5, height = 3, units = "in")
test1 = read.csv("../data/charged_regions/cr_trimmed_filtered.csv", comment.char = "#", stringsAsFactors = FALSE)
test2 = read.csv("../data/charged_regions/cr_filtered.csv", comment.char = "#", stringsAsFactors = FALSE)
head(test1)
head(charged.hits)
unique(charged.hits$orf_label)
charged.hits <- read.csv("../data/charged_regions/cr_trimmed_filtered.csv", comment.char = "#", stringsAsFactors = FALSE) %>%
filter(orf_label != "dubious") %>%
mutate(n.E = str_count(region.seq, "E"),
n.K = str_count(region.seq, "K"),
n.D = str_count(region.seq, "D"),
n.R = str_count(region.seq, "R"),
n.GP = str_count(region.seq, "G") + str_count(region.seq, "P"),
per.pos = (n.K + n.R) / (n.E + n.K + n.D + n.R),
per.neg = 1 - per.pos,
tot.pos = (n.K + n.R) / region.len,
tot.neg = (n.E + n.D) / region.len,
net.charge = ((n.K + n.R) - (n.E + n.D)) / region.len,
gene = ifelse(gene == "MDN1", "REA1", gene)) # Correct old gene name
unique(charged.hits$orf_label)
allGOs.allORFs <- read.delim("../data/GO-analysis/allgos_allorfs.tsv", header=F, col.names = c("orf", "gene", "GO_name", "GO_type", "GO_id"))
nucleolusGOs.orfs <- fread("../data/GO-analysis/orfs_annotated_as_nuleolar_and_childGOs.tsv", sep = "\t", stringsAsFactors = FALSE,
col.names = c("orf", "gene", "feature", "status", "GO_id", "GO_name", "GO_type", "modifier", "curation.type"))
slim_processes <- read.delim("../data/GO-analysis/goslim_process.txt", header=F, sep = ";")[,2]
slim_components <- read.delim("../data/GO-analysis/goslim_component.txt", header=F, sep=";")[,2]
slim_functions <- read.delim("../data/GO-analysis/goslim_function.txt", header=F, sep=";")[,2]
allslims <- base::union(base::union(slim_processes, slim_components), slim_functions)
extra_terms = c("GO:0042254")
allslims = c(allslims, extra_terms)
allslims.allORFs <- filter(allGOs.allORFs, GO_id %in% allslims)
some.components.all.orfs <- filter(allslims.allORFs, GO_type == "cellular_component") %>%
filter(GO_name %!in% c("cellular_component", "endomembrane system", "site of polarized growth")) %>%
mutate(hit = ifelse(orf %in% unique(charged.hits$orf), 'y', 'n'))
ordering <- group_by(some.components.all.orfs, GO_name, hit) %>%
summarise(num = n()) %>%
reshape2::dcast(GO_name ~ hit, value.var="num") %>%
mutate_if(is.integer, ~replace(., is.na(.), 0)) %>%
mutate(per.y = y / (y+n)) %>%
arrange(desc(per.y))
some.components.all.orfs <- some.components.all.orfs %>%
mutate(GO_name.f = factor(GO_name, levels = ordering$GO_name))
ggplot(some.components.all.orfs, aes(x = GO_name.f, fill = hit)) +
geom_bar(position='fill', show.legend = FALSE) +
labs(y = "Fraction with at\nleast one region") +
scale_fill_manual(values = c('y' = 'black', 'n' = 'grey'), labels = c('n' = 'not detected', 'y' = 'detected')) +
geom_hline(yintercept = length(unique(charged.hits$orf))/5925,
color="white") + # baseline frequency of all non-dubious active orfs from s. cer
theme(axis.title.x = element_blank(),
axis.text.x = element_text(angle = 60, hjust = 1, vjust = 1, size=8))
#ggsave("../figures/S1-enrichments.png", width = 5, height = 3, units = "in")
