facet_grid(~parent.passage) +
geom_point() +
#scale_y_log10nice() +
labs(y = "Number of variants called") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
axis.title.x = element_blank())
ggplot(filter(to.plot2, rad == '-Rad' & !grepl("L", parent.passage)), aes(x = interaction(parent.genotype, lineage), y = N.vars, color = parent.genotype)) +
geom_hline(data = tst, aes(yintercept = mean.n.vars)) +
facet_grid(~parent.passage) +
geom_point() +
#scale_y_log10nice() +
labs(y = "Number of variants called") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
axis.title.x = element_blank())
head(tst)
tst <- filter(ma.muts.sum, media == "YPG") %>%
group_by(genotype, passage) %>%
summarise(mean.n.vars = mean(N.vars, na.rm=TRUE)) %>%
filter(genotype == "Pol3_Δmsh2" | genotype == "Pol3_Δmsh6") %>%
mutate(parent.passage = paste0("P", passage)) %>%
rename("parent.genotype" = "genotype")
ggplot(filter(to.plot2, rad == '-Rad' & !grepl("L", parent.passage)), aes(x = interaction(parent.genotype, lineage), y = N.vars, color = parent.genotype)) +
geom_hline(data = tst, aes(yintercept = mean.n.vars, color = parent.genotype)) +
facet_grid(~parent.passage) +
geom_point() +
#scale_y_log10nice() +
labs(y = "Number of variants called") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
axis.title.x = element_blank())
#ggsave("figures/L75-number-of-variants.png", dpi=350)
ggplot(filter(to.plot2, rad == '-Rad' & !grepl("L", parent.passage)), aes(x = interaction(parent.genotype, lineage), y = N.vars, color = parent.genotype)) +
#geom_hline(data = tst, aes(yintercept = mean.n.vars, color = parent.genotype)) +
facet_grid(~parent.passage) +
geom_point() +
#scale_y_log10nice() +
labs(y = "Number of variants called") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
axis.title.x = element_blank())
ggplot(filter(to.plot2, rad == '-Rad' & !grepl("L", parent.passage)), aes(x = interaction(parent.genotype, lineage), y = N.vars, color = parent.genotype)) +
geom_hline(data = tst, aes(yintercept = mean.n.vars, color = parent.genotype)) +
facet_grid(~parent.passage) +
geom_point() +
#scale_y_log10nice() +
labs(y = "Number of variants called") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
axis.title.x = element_blank())
ggplot(filter(to.plot2, rad == '-Rad' & !grepl("L", parent.passage)), aes(x = interaction(parent.genotype, lineage), y = N.vars, color = parent.genotype)) +
geom_hline(data = tst, aes(yintercept = mean.n.vars, color = parent.genotype)) +
facet_grid(~parent.passage) +
geom_point() +
#scale_y_log10nice() +
labs(y = "Number of variants called") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
axis.title.x = element_blank(),
legend.title = element_blank())
ggplot(filter(to.plot2, rad == '-Rad' & !grepl("L", parent.passage)), aes(x = interaction(parent.genotype, lineage), y = N.vars, color = parent.genotype)) +
geom_hline(data = tst, aes(yintercept = mean.n.vars, color = parent.genotype)) +
facet_grid(~parent.passage) +
geom_point() +
#scale_y_log10nice() +
labs(y = "Number of variants called") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
axis.title.x = element_blank(),
legend.title = element_blank(),
legend.position = "top")
tst <- filter(ma.muts.sum, media == "YPG") %>%
group_by(genotype, passage) %>%
summarise(mean.n.vars = mean(N.vars, na.rm=TRUE)) %>%
filter(genotype == "Pol3_Δmsh2" | genotype == "Pol3_Δmsh6") %>%
mutate(parent.passage = paste0("P", passage)) %>%
rename("parent.genotype" = "genotype")
ggplot(filter(to.plot2, rad == '-Rad' & !grepl("L", parent.passage)), aes(x = interaction(parent.genotype, lineage), y = N.vars, color = parent.genotype)) +
geom_hline(data = tst, aes(yintercept = mean.n.vars, color = parent.genotype)) +
facet_grid(~parent.passage) +
geom_point() +
#scale_y_log10nice() +
labs(y = "Number of variants called") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
axis.title.x = element_blank(),
legend.title = element_blank(),
legend.position = "top")
ggsave("figures/L75-number-of-variants.png", dpi=350)
passage.plot <- filter(to.plot, grepl("L", passage.f)) %>%
mutate(passage.num = as.numeric(str_remove(passage.f, "L")))
ggplot(passage.plot, aes(x = passage.num, y = N.vars, color = replicate)) +
geom_point() +
geom_line() +
geom_hline(yintercept = 163) +
labs(x = "Passage",
y = "Number of variants called") +
theme(legend.title = element_blank())
ggsave("figures/p35-ypg-2_variants-vs-passage_unfiltered.pdf")
# Setup
knitr::opts_chunk$set(echo=FALSE, warning=FALSE, message=FALSE, fig.width=4, fig.height=3.5)
# Libraries
library(ggplot2)
library(scales)
library(stringr)
library(tidyr)
library(dplyr)
library(data.table)
library(cat.extras)
library(ggrepel)
library(readxl)
library(grid)
library(gridExtra)
theme_set(theme_ct_stresspH(base_size = 10))
`%!in%` = Negate(`%in%`)
pan.hits.0.4 <- read.csv("../output/extract-charged-regions-output/charged-regions-medthreshold-1122.csv", comment.char = "#", stringsAsFactors = FALSE) %>%
mutate(n.E = str_count(region.seq, "E"),
n.K = str_count(region.seq, "K"),
n.D = str_count(region.seq, "D"),
n.R = str_count(region.seq, "R"),
per.pos = (n.K + n.R) / (n.E + n.K + n.D + n.R),
per.neg = 1 - per.pos,
tot.pos = (n.K + n.R) / region.len,
tot.neg = (n.E + n.D) / region.len,
net.charge = (n.K + n.R) - (n.E + n.D))
pan.hits.0.5 <- read.csv("../output/extract-charged-regions-output/charged-regions-highthreshold-1122.csv", comment.char = "#", stringsAsFactors = FALSE) %>%
mutate(n.E = str_count(region.seq, "E"),
n.K = str_count(region.seq, "K"),
n.D = str_count(region.seq, "D"),
n.R = str_count(region.seq, "R"),
per.pos = (n.K + n.R) / (n.E + n.K + n.D + n.R),
per.neg = 1 - per.pos,
tot.pos = (n.K + n.R) / region.len,
tot.neg = (n.E + n.D) / region.len,
net.charge = (n.K + n.R) - (n.E + n.D))
nrow(pan.hits.0.4)
length(unique(pan.hits.0.4$orf))
num.regions <- pan.hits.0.4 %>%
group_by(orf) %>%
summarise(n.regions = n())
avg.num.regions = mean(num.regions$n.regions)
ggplot(num.regions, aes(x = n.regions)) +
geom_histogram()
ggplot(pan.hits.0.4, aes(x = frac.charge)) +
#geom_density(kernel = "epanechnikov", bw=0.003) +
geom_histogram() +
labs(x = "Fraction charged",
title = "Threshold 0.4") +
theme_ct_stresspH(base_size=12) +
annotate(geom='text', label=paste("n =", nrow(pan.hits.0.4)), x = 0.8, y = 135, size=4.5, fontface=2) +
#scale_y_continuous(breaks = c(0, 5, 10)) +
theme()
#ggsave("~/Dropbox (Drummond Lab)/cat/figures/20-11-05_dinnergroup/frac_charged_dist.pdf")
ggplot(pan.hits.0.4, aes(x = region.len)) +
#geom_density(kernel = "epanechnikov", bw=0.005) +
geom_histogram(bins = 40) +
labs(x = "Region length",
title = "Threshold 0.4") +
#scale_x_log10nice(limits = c(10, 1000)) +
scale_x_continuous(limits = c(0, NA)) +
theme_ct_stresspH(base_size=12)
ggplot(pan.hits.0.4, aes(x = frac.charge, y = region.len)) +
geom_point(color = 'grey') +
geom_density_2d(bins = 8, color='black') +
labs(x = "Region FCR",
y = "Region length (aas)",
title = "Threshold 0.4") +
theme_ct_stresspH(base_size=10) +
scale_y_log10nice(limits = c(NA, 150)) +
theme()
ggplot(pan.hits.0.4, aes(x = frac.charge, y = net.charge / region.len)) +
geom_point(color = 'grey') +
geom_density_2d(bins = 8, color='black') +
labs(x = "FCR",
#title = "Threshold 0.4",
y = "Normalized net charge") +
theme_ct_stresspH(base_size=10) +
annotate(geom="text", x = 0.78, y = 0.4, size=4.5,
label = paste("n =", nrow(pan.hits.0.4))) +
theme()
01.10.2022
(Cat and Dan)
# Setup
knitr::opts_chunk$set(echo=FALSE, warning=FALSE, message=FALSE, fig.width=4.5, fig.height=3.5)
# Libraries
library(ggplot2)
library(scales)
library(stringr)
library(tidyr)
library(dplyr)
library(data.table)
library(cat.extras)
install.packages("devtools")
library(devtools)
?install_github()
install_github("ctriandafillou/cat.extras")
# Setup
knitr::opts_chunk$set(echo=FALSE, warning=FALSE, message=FALSE, fig.width=4.5, fig.height=3.5)
# Libraries
library(ggplot2)
library(scales)
library(stringr)
library(tidyr)
library(dplyr)
library(data.table)
library(cat.extras)
library(ggrepel)
library(readxl)
library(grid)
library(gridExtra)
theme_clean <- function(base_size=12) {
theme_grey(base_size=base_size, base_family = "") %+replace%
theme(panel.grid=element_blank(),
axis.text = element_text(size = base_size),
#strip.text.x = element_text(size = 10, vjust = 2, margin = margin(t = 10)),
#strip.text.y = element_text(size = 10, vjust = 2, margin = margin(r = 10)),
panel.background=element_blank(),
axis.ticks=element_line(colour="grey20"),
panel.border=element_rect(fill=NA),
legend.background = element_blank(),
legend.key.height = unit(3, "mm"),
legend.key = element_blank(),
strip.background = element_blank(),
legend.box.spacing = unit(1, "mm"))
}
theme_set(theme_clean(base_size = 10))
`%!in%` = Negate(`%in%`)
charged.hits <- read.csv("../data/charged_regions/cr_raw.csv", comment.char = "#", stringsAsFactors = FALSE) %>%
filter(orf_label != "dubious") %>%
mutate(n.E = str_count(region.seq, "E"),
n.K = str_count(region.seq, "K"),
n.D = str_count(region.seq, "D"),
n.R = str_count(region.seq, "R"),
n.GP = str_count(region.seq, "G") + str_count(region.seq, "P"),
per.pos = (n.K + n.R) / (n.E + n.K + n.D + n.R),
per.neg = 1 - per.pos,
tot.pos = (n.K + n.R) / region.len,
tot.neg = (n.E + n.D) / region.len,
gene = ifelse(gene == "MDN1", "REA1", gene)) # Correct old gene name
allGOs.allORFs <- read.delim("../data/GO-analysis/allgos_allorfs.tsv", header=F, col.names = c("orf", "gene", "GO_name", "GO_type", "GO_id"))
nucleolusGOs.orfs <- fread("../data/GO-analysis/orfs_annotated_as_nuleolar_and_childGOs.tsv", sep = "\t", stringsAsFactors = FALSE,
col.names = c("orf", "gene", "feature", "status", "GO_id", "GO_name", "GO_type", "modifier", "curation.type"))
slim_processes <- read.delim("../data/GO-analysis/goslim_process.txt", header=F, sep = ";")[,2]
slim_components <- read.delim("../data/GO-analysis/goslim_component.txt", header=F, sep=";")[,2]
slim_functions <- read.delim("../data/GO-analysis/goslim_function.txt", header=F, sep=";")[,2]
allslims <- base::union(base::union(slim_processes, slim_components), slim_functions)
extra_terms = c("GO:0042254")
allslims = c(allslims, extra_terms)
allslims.allORFs <- filter(allGOs.allORFs, GO_id %in% allslims)
some.components.all.orfs <- filter(allslims.allORFs, GO_type == "cellular_component") %>%
filter(GO_name %!in% c("cellular_component", "endomembrane system", "site of polarized growth")) %>%
mutate(hit = ifelse(orf %in% unique(charged.hits$orf), 'y', 'n'))
ordering <- group_by(some.components.all.orfs, GO_name, hit) %>%
summarise(num = n()) %>%
reshape2::dcast(GO_name ~ hit, value.var="num") %>%
mutate_if(is.integer, ~replace(., is.na(.), 0)) %>%
mutate(per.y = y / (y+n)) %>%
arrange(desc(per.y))
some.components.all.orfs <- some.components.all.orfs %>%
mutate(GO_name.f = factor(GO_name, levels = ordering$GO_name))
ggplot(some.components.all.orfs, aes(x = GO_name.f, fill = hit)) +
geom_bar(position='fill', show.legend = FALSE) +
labs(y = "Fraction with at\nleast one region") +
scale_fill_manual(values = c('y' = 'black', 'n' = 'grey'), labels = c('n' = 'not detected', 'y' = 'detected')) +
geom_hline(yintercept = length(unique(charged.hits$orf))/5925,
color="white") + # baseline frequency of all non-dubious active orfs from s. cer
theme(axis.title.x = element_blank(),
axis.text.x = element_text(angle = 60, hjust = 1, vjust = 1, size=8))
ggsave("../figures/S1-enrichments.png", width = 5, height = 3, units = "in")
head(some.components.all.orfs)
head(allslims.allORFs)
head(charged.hits)
charged.hits <- read.csv("../data/charged_regions/cr_raw.csv", comment.char = "#", stringsAsFactors = FALSE) %>%
filter(orf_label != "dubious") %>%
mutate(n.E = str_count(region.seq, "E"),
n.K = str_count(region.seq, "K"),
n.D = str_count(region.seq, "D"),
n.R = str_count(region.seq, "R"),
n.GP = str_count(region.seq, "G") + str_count(region.seq, "P"),
per.pos = (n.K + n.R) / (n.E + n.K + n.D + n.R),
per.neg = 1 - per.pos,
tot.pos = (n.K + n.R) / region.len,
tot.neg = (n.E + n.D) / region.len,
net.charge = ((n.K + n.R) - (n.E + n.D)) / region.len,
gene = ifelse(gene == "MDN1", "REA1", gene)) # Correct old gene name
filter(charged.hits, net.charge < -0.5)
filter(charged.hits, net.charge < -0.5 & FCR > 0.6)
filter(charged.hits, net.charge < -0.5 & frac.charge > 0.6)
filter(charged.hits, net.charge < -0.5 & frac.charge > 0.6)$orf
filter(allslims.allORFs, orf %in% (filter(charged.hits, net.charge < -0.5 & frac.charge > 0.6)$orf))
x = filter(allslims.allORFs, GO_name %!in% c("biological_process", "molecular_function")) %>% # remove generic GOs
filter(orf %in% (filter(charged.hits, net.charge < -0.5 & frac.charge > 0.6)$orf))
x
nrow(x)
filter(charged.hits, net.charge < -0.5 & frac.charge > 0.6)$orf
allslims.allORFs
length(unique(allslims.allORFs$orf))
length(filter(charged.hits, net.charge < -0.5 & frac.charge > 0.6)$orf)
length(filter(allslims.allORFs, orf %in% filter(charged.hits, net.charge < -0.5 & frac.charge > 0.6)$orf)$orf)
length(unique(filter(allslims.allORFs, orf %in% filter(charged.hits, net.charge < -0.5 & frac.charge > 0.6)$orf)$orf))
filter(charged.hits, net.charge < -0.5 & frac.charge > 0.6)$orf
filter(charged.hits, net.charge < -0.5)$orf
filter(charged.hits, net.charge < -0.5)$gene
x
install.packages("kable")
kable
?kable
# Setup
knitr::opts_chunk$set(echo=FALSE, warning=FALSE, message=FALSE, fig.width=4.5, fig.height=3.5)
# Libraries
library(ggplot2)
library(scales)
library(stringr)
library(tidyr)
library(dplyr)
library(data.table)
library(cat.extras)
library(ggrepel)
library(readxl)
library(grid)
library(gridExtra)
theme_clean <- function(base_size=12) {
theme_grey(base_size=base_size, base_family = "") %+replace%
theme(panel.grid=element_blank(),
axis.text = element_text(size = base_size),
#strip.text.x = element_text(size = 10, vjust = 2, margin = margin(t = 10)),
#strip.text.y = element_text(size = 10, vjust = 2, margin = margin(r = 10)),
panel.background=element_blank(),
axis.ticks=element_line(colour="grey20"),
panel.border=element_rect(fill=NA),
legend.background = element_blank(),
legend.key.height = unit(3, "mm"),
legend.key = element_blank(),
strip.background = element_blank(),
legend.box.spacing = unit(1, "mm"))
}
theme_set(theme_clean(base_size = 10))
`%!in%` = Negate(`%in%`)
charged.hits <- read.csv("../data/charged_regions/cr_raw.csv", comment.char = "#", stringsAsFactors = FALSE) %>%
filter(orf_label != "dubious") %>%
mutate(n.E = str_count(region.seq, "E"),
n.K = str_count(region.seq, "K"),
n.D = str_count(region.seq, "D"),
n.R = str_count(region.seq, "R"),
n.GP = str_count(region.seq, "G") + str_count(region.seq, "P"),
per.pos = (n.K + n.R) / (n.E + n.K + n.D + n.R),
per.neg = 1 - per.pos,
tot.pos = (n.K + n.R) / region.len,
tot.neg = (n.E + n.D) / region.len,
net.charge = ((n.K + n.R) - (n.E + n.D)) / region.len,
gene = ifelse(gene == "MDN1", "REA1", gene)) # Correct old gene name
head(char.expand())
head(charged.hits)
filter(charged.hits, gene=="GLE1")
# Setup
knitr::opts_chunk$set(echo=FALSE, warning=FALSE, message=FALSE, fig.width=4.5, fig.height=3.5)
# Libraries
library(ggplot2)
library(scales)
library(stringr)
library(tidyr)
library(dplyr)
library(data.table)
library(cat.extras)
library(ggrepel)
library(readxl)
library(grid)
library(gridExtra)
theme_clean <- function(base_size=12) {
theme_grey(base_size=base_size, base_family = "") %+replace%
theme(panel.grid=element_blank(),
axis.text = element_text(size = base_size),
#strip.text.x = element_text(size = 10, vjust = 2, margin = margin(t = 10)),
#strip.text.y = element_text(size = 10, vjust = 2, margin = margin(r = 10)),
panel.background=element_blank(),
axis.ticks=element_line(colour="grey20"),
panel.border=element_rect(fill=NA),
legend.background = element_blank(),
legend.key.height = unit(3, "mm"),
legend.key = element_blank(),
strip.background = element_blank(),
legend.box.spacing = unit(1, "mm"))
}
theme_set(theme_clean(base_size = 10))
`%!in%` = Negate(`%in%`)
charged.hits <- read.csv("../data/charged_regions/cr_raw.csv", comment.char = "#", stringsAsFactors = FALSE) %>%
filter(orf_label != "dubious") %>%
mutate(n.E = str_count(region.seq, "E"),
n.K = str_count(region.seq, "K"),
n.D = str_count(region.seq, "D"),
n.R = str_count(region.seq, "R"),
n.GP = str_count(region.seq, "G") + str_count(region.seq, "P"),
per.pos = (n.K + n.R) / (n.E + n.K + n.D + n.R),
per.neg = 1 - per.pos,
tot.pos = (n.K + n.R) / region.len,
tot.neg = (n.E + n.D) / region.len,
net.charge = ((n.K + n.R) - (n.E + n.D)) / region.len,
gene = ifelse(gene == "MDN1", "REA1", gene)) # Correct old gene name
allGOs.allORFs <- read.delim("../data/GO-analysis/allgos_allorfs.tsv", header=F, col.names = c("orf", "gene", "GO_name", "GO_type", "GO_id"))
nucleolusGOs.orfs <- fread("../data/GO-analysis/orfs_annotated_as_nuleolar_and_childGOs.tsv", sep = "\t", stringsAsFactors = FALSE,
col.names = c("orf", "gene", "feature", "status", "GO_id", "GO_name", "GO_type", "modifier", "curation.type"))
slim_processes <- read.delim("../data/GO-analysis/goslim_process.txt", header=F, sep = ";")[,2]
slim_components <- read.delim("../data/GO-analysis/goslim_component.txt", header=F, sep=";")[,2]
slim_functions <- read.delim("../data/GO-analysis/goslim_function.txt", header=F, sep=";")[,2]
allslims <- base::union(base::union(slim_processes, slim_components), slim_functions)
extra_terms = c("GO:0042254")
allslims = c(allslims, extra_terms)
allslims.allORFs <- filter(allGOs.allORFs, GO_id %in% allslims)
some.components.all.orfs <- filter(allslims.allORFs, GO_type == "cellular_component") %>%
filter(GO_name %!in% c("cellular_component", "endomembrane system", "site of polarized growth")) %>%
mutate(hit = ifelse(orf %in% unique(charged.hits$orf), 'y', 'n'))
# GO terms of proteins with highly acidic regions
x = filter(allslims.allORFs, GO_name %!in% c("biological_process", "molecular_function")) %>% # remove generic GOs
filter(orf %in% filter(charged.hits, net.charge < -0.5 & frac.charge > 0.6)$orf)
x
x = filter(allslims.allORFs, GO_name %!in% c("biological_process", "molecular_function")) %>% # remove generic GOs
filter(orf %in% filter(charged.hits, net.charge < -0.5 & frac.charge > 0.5)$orf)
x
filter(charged.hits, net.charge < -0.5 & frac.charge > 0.5)
# Setup
knitr::opts_chunk$set(echo=FALSE, warning=FALSE, message=FALSE, fig.width=4.5, fig.height=3.5)
# Libraries
library(ggplot2)
library(scales)
library(stringr)
library(tidyr)
library(dplyr)
library(data.table)
library(cat.extras)
library(ggrepel)
library(readxl)
library(grid)
library(gridExtra)
theme_clean <- function(base_size=12) {
theme_grey(base_size=base_size, base_family = "") %+replace%
theme(panel.grid=element_blank(),
axis.text = element_text(size = base_size),
#strip.text.x = element_text(size = 10, vjust = 2, margin = margin(t = 10)),
#strip.text.y = element_text(size = 10, vjust = 2, margin = margin(r = 10)),
panel.background=element_blank(),
axis.ticks=element_line(colour="grey20"),
panel.border=element_rect(fill=NA),
legend.background = element_blank(),
legend.key.height = unit(3, "mm"),
legend.key = element_blank(),
strip.background = element_blank(),
legend.box.spacing = unit(1, "mm"))
}
theme_set(theme_clean(base_size = 10))
`%!in%` = Negate(`%in%`)
charged.hits <- read.csv("../data/charged_regions/cr_trimmed_filtered.csv", comment.char = "#", stringsAsFactors = FALSE) %>%
#filter(orf_label != "dubious") %>%
mutate(n.E = str_count(region.seq, "E"),
n.K = str_count(region.seq, "K"),
n.D = str_count(region.seq, "D"),
n.R = str_count(region.seq, "R"),
n.GP = str_count(region.seq, "G") + str_count(region.seq, "P"),
per.pos = (n.K + n.R) / (n.E + n.K + n.D + n.R),
per.neg = 1 - per.pos,
tot.pos = (n.K + n.R) / region.len,
tot.neg = (n.E + n.D) / region.len,
net.charge = ((n.K + n.R) - (n.E + n.D)) / region.len,
gene = ifelse(gene == "MDN1", "REA1", gene)) # Correct old gene name
nrow(charged.hits)
unique(charged.hits$orf)
length(unique(charged.hits$orf))
charged.hits <- read.csv("../data/charged_regions/cr_trimmed_filtered.csv", comment.char = "#", stringsAsFactors = FALSE) %>%
mutate(n.E = str_count(region.seq, "E"),
n.K = str_count(region.seq, "K"),
n.D = str_count(region.seq, "D"),
n.R = str_count(region.seq, "R"),
n.GP = str_count(region.seq, "G") + str_count(region.seq, "P"),
per.pos = (n.K + n.R) / (n.E + n.K + n.D + n.R),
per.neg = 1 - per.pos,
tot.pos = (n.K + n.R) / region.len,
tot.neg = (n.E + n.D) / region.len,
net.charge = ((n.K + n.R) - (n.E + n.D)) / region.len,
gene = ifelse(gene == "MDN1", "REA1", gene)) # Correct old gene name
allGOs.allORFs <- read.delim("../data/GO-analysis/allgos_allorfs.tsv", header=F, col.names = c("orf", "gene", "GO_name", "GO_type", "GO_id"))
nucleolusGOs.orfs <- fread("../data/GO-analysis/orfs_annotated_as_nuleolar_and_childGOs.tsv", sep = "\t", stringsAsFactors = FALSE,
col.names = c("orf", "gene", "feature", "status", "GO_id", "GO_name", "GO_type", "modifier", "curation.type"))
slim_processes <- read.delim("../data/GO-analysis/goslim_process.txt", header=F, sep = ";")[,2]
slim_components <- read.delim("../data/GO-analysis/goslim_component.txt", header=F, sep=";")[,2]
slim_functions <- read.delim("../data/GO-analysis/goslim_function.txt", header=F, sep=";")[,2]
allslims <- base::union(base::union(slim_processes, slim_components), slim_functions)
extra_terms = c("GO:0042254")
allslims = c(allslims, extra_terms)
allslims.allORFs <- filter(allGOs.allORFs, GO_id %in% allslims)
some.components.all.orfs <- filter(allslims.allORFs, GO_type == "cellular_component") %>%
filter(GO_name %!in% c("cellular_component", "endomembrane system", "site of polarized growth")) %>%
mutate(hit = ifelse(orf %in% unique(charged.hits$orf), 'y', 'n'))
ordering <- group_by(some.components.all.orfs, GO_name, hit) %>%
summarise(num = n()) %>%
reshape2::dcast(GO_name ~ hit, value.var="num") %>%
mutate_if(is.integer, ~replace(., is.na(.), 0)) %>%
mutate(per.y = y / (y+n)) %>%
arrange(desc(per.y))
some.components.all.orfs <- some.components.all.orfs %>%
mutate(GO_name.f = factor(GO_name, levels = ordering$GO_name))
ggplot(some.components.all.orfs, aes(x = GO_name.f, fill = hit)) +
geom_bar(position='fill', show.legend = FALSE) +
labs(y = "Fraction with at\nleast one region") +
scale_fill_manual(values = c('y' = 'black', 'n' = 'grey'), labels = c('n' = 'not detected', 'y' = 'detected')) +
geom_hline(yintercept = length(unique(charged.hits$orf))/5925,
color="white") + # baseline frequency of all non-dubious active orfs from s. cer
theme(axis.title.x = element_blank(),
axis.text.x = element_text(angle = 60, hjust = 1, vjust = 1, size=8))
#ggsave("../figures/S1-enrichments.png", width = 5, height = 3, units = "in")
# GO terms of proteins with highly acidic regions
x = filter(allslims.allORFs, GO_name %!in% c("biological_process", "molecular_function")) %>% # remove generic GOs
filter(orf %in% filter(charged.hits, net.charge < -0.5 & frac.charge > 0.5)$orf)
pwd()
pwd
ls
read.csv("../data/charged_regions/cr_trimmed_filtered.csv", comment.char = "#", stringsAsFactors = FALSE)
setwd("~/hcrpaper/")
read.csv("data/charged_regions/cr_trimmed_filtered_aflabel.csv")
test = read.csv("data/charged_regions/cr_trimmed_filtered_aflabel.csv")
head(test)
